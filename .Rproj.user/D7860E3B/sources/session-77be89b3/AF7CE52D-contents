#################################
# Example 1: Simulation Divide Matrix
# Type I Diabetes Mellitus and Bladder Cancer should be singificant 
#################################
setwd("..")
files <- list.files("Functions")
for (file in files){
    source(paste("Functions/",file , sep = ""))
}
setwd("Examples")

load("HumanPathwaysGS.RData")
load("SimulationDivideMatrix.RData")

#Previous normalization
cutoff <- 1
number <- sum(apply(cpm(study1Ex), 1, max) < cutoff)
drop <- which(apply(cpm(study1Ex), 1, max) < cutoff)
study1Ex <- study1Ex[-drop,]
study1Ex <- tmm(study1Ex)


number <- sum(apply(cpm(study2Ex), 1, max) < cutoff)
drop <- which(apply(cpm(study2Ex), 1, max) < cutoff)
study2Ex <- study2Ex[-drop,]
study2Ex <- tmm(study2Ex)

number <- sum(apply(cpm(study3Ex), 1, max) < cutoff)
drop <- which(apply(cpm(study3Ex), 1, max) < cutoff)
study3Ex <- study3Ex[-drop,]
study3Ex <- tmm(study3Ex)

number <- sum(apply(cpm(study4Ex), 1, max) < cutoff)
drop <- which(apply(cpm(study4Ex), 1, max) < cutoff)
study4Ex <- study4Ex[-drop,]
study4Ex <- tmm(study4Ex)

number <- sum(apply(cpm(study5Ex), 1, max) < cutoff)
drop <- which(apply(cpm(study5Ex), 1, max) < cutoff)
study5Ex <- study5Ex[-drop,]
study5Ex <- tmm(study5Ex)




#Create the Meta-analysis object with Expression matrix
listMatrices <- list(study1Ex, study2Ex, study3Ex, study4Ex, study5Ex)
listPhenodata <- list(study1Pheno, study2Pheno, study3Pheno, study4Pheno, study5Pheno)
phenoGroups <- c("Condition","Condition", "Condition", "Condition", "Condition")
phenoCases <- list("Case", "Case", "Case", "Case", "Case")
phenoControls <- list("Healthy", "Healthy", "Healthy", "Healthy", "Healthy")
ObjectMA_sim <- createObjectMA(listEX = listMatrices, 
    listPheno = listPhenodata, namePheno = phenoGroups, 
    expGroups = phenoCases, refGroups = phenoControls)
names(ObjectMA_sim) <- c("study1", "study2", "study3", "study4", "study5")



#Pass Expression matrix to the different pathways matrix (Uncomment for do it again)

#GSVA
MP_GSVA <- objectExMA.to.objectMApath(objectExMA = ObjectMA_sim, 
    geneSets = HumanPathwaysGS, pathMethod = "GSVA", minSize = 7, n_cores = 5)

#Z-score
MP_Zscore <- objectExMA.to.objectMApath(objectExMA = ObjectMA_sim,
    geneSets = HumanPathwaysGS, pathMethod = "Zscore", minSize = 7, n_cores = 5)

#ssGSEA
MP_ssGSEA <- objectExMA.to.objectMApath(objectExMA = ObjectMA_sim,
    geneSets = HumanPathwaysGS, pathMethod = "ssGSEA", minSize = 7, internal_n_cores = 7)

#Singscore
MP_Singscore <- objectExMA.to.objectMApath(objectExMA = ObjectMA_sim, 
    geneSets = HumanPathwaysGS, pathMethod = "Singscore", minSize = 7, n_cores = 5)

save(MP_GSVA, MP_Zscore, MP_ssGSEA, MP_Singscore, file = "MP_sim.RData")

#Results of the meta-analysis
#GSVA
MP_GSVA_fil <- filteringPaths(MP_GSVA, threshold = "sd")
res_GSVA <- metaAnalysisESpath(MP_GSVA_fil, typeMethod = "REM", measure = "limma", proportionData = 1)
sig_GSVA <- subset(res_GSVA, res_GSVA$FDR<0.05)
#Z-score
MP_Zscore_fil <- filteringPaths(MP_Zscore, threshold = "sd")
res_Zscore <- metaAnalysisESpath(MP_Zscore_fil, typeMethod = "REM", measure = "limma",
    proportionData = 0.5, WithinVarCorrect = TRUE)
sig_Zscore <- subset(res_Zscore, res_Zscore$FDR<0.05)
#ssGSEA
MP_ssGSEA_fil <- filteringPaths(MP_ssGSEA, threshold = "sd")
res_ssGSEA <- metaAnalysisESpath(MP_ssGSEA_fil, measure = "limma",typeMethod = "REM", proportionData = 1)
sig_ssGSEA <- subset(res_ssGSEA, res_ssGSEA$FDR<0.05)
#singscore
MP_Singscore_fil <- filteringPaths(MP_Singscore, threshold = "sd")
res_Singscore <- metaAnalysisESpath(MP_Singscore_fil, measure = "limma", 
    typeMethod = "REM", WithinVarCorrect = TRUE, proportionData = 1)
sig_Singscore <-subset(res_Singscore, res_Singscore$FDR<0.05)



###########################################
# Comparasion with the rest of methods
############################################

################################################################
# REM meta-analysis of gene expression and then FGSEA (MA + FGSEA)
################################################################

MA_fgsea <- metaAnalysisDE(ObjectMA_sim,
    typeMethod = "REM",
    missAllow = 0.3,
    proportionData = 1)

set.seed(1325488741)
results_Com <- MA_fgsea$Com.ES
results_Com <- MA_fgsea$AveFC
names(results_Com) <- rownames(MA_fgsea)
results_Com <- results_Com[order(results_Com)]
res_MA_fgsea <- fgsea(pathways = HumanPathwaysGS, stats = results_Com, minSize = 7, nproc = 2)
sig_MA_FGSEA <- subset(res_MA_fgsea, res_MA_fgsea$padj < 0.05)
